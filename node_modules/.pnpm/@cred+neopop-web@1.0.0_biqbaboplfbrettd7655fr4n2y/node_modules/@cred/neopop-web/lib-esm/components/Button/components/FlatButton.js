import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import '../../../primitives/index.js';
import { getButtonColors, getTextStyle, getSpacingConfig } from '../../../primitives/buttons.js';
import React__default from 'react';
import { Pointer } from '../../Helpers/index.js';
import Typography from '../../Typography/index.js';
import { ButtonWrapper } from '../styles.js';
import { fontNameSpaces } from '../../../primitives/typography.js';

var _excluded = ["variant", "colorMode", "kind", "size", "textStyle", "colorConfig", "spacingConfig", "children", "onTouchStart"];

var FlatButton = function FlatButton(props) {
  var _ref, _colors$disabledColor;

  var variant = props.variant,
      colorMode = props.colorMode,
      kind = props.kind,
      size = props.size,
      textStyle = props.textStyle,
      colorConfig = props.colorConfig,
      spacingConfig = props.spacingConfig,
      children = props.children,
      _props$onTouchStart = props.onTouchStart,
      onTouchStart = _props$onTouchStart === void 0 ? function () {} : _props$onTouchStart,
      propsToFwd = _objectWithoutProperties(props, _excluded);

  var spacing = spacingConfig !== null && spacingConfig !== void 0 ? spacingConfig : getSpacingConfig(size !== null && size !== void 0 ? size : 'medium');
  var colors = colorConfig !== null && colorConfig !== void 0 ? colorConfig : getButtonColors(colorMode !== null && colorMode !== void 0 ? colorMode : 'dark', variant !== null && variant !== void 0 ? variant : 'primary', kind !== null && kind !== void 0 ? kind : 'flat');
  var customTextStyle = (_ref = textStyle !== null && textStyle !== void 0 ? textStyle : getTextStyle(size !== null && size !== void 0 ? size : 'medium')) !== null && _ref !== void 0 ? _ref : fontNameSpaces.th14b;
  var textColor = propsToFwd.disabled ? colors === null || colors === void 0 ? void 0 : (_colors$disabledColor = colors.disabledColors) === null || _colors$disabledColor === void 0 ? void 0 : _colors$disabledColor.color : colors === null || colors === void 0 ? void 0 : colors.color;
  return /*#__PURE__*/React__default.createElement(ButtonWrapper, _extends({
    colorConfig: colors,
    spacingConfig: spacing,
    textStyle: customTextStyle,
    color: textColor,
    onTouchStart: onTouchStart
  }, propsToFwd), /*#__PURE__*/React__default.createElement("div", {
    className: "button-face"
  }, propsToFwd.icon ? /*#__PURE__*/React__default.createElement("img", {
    src: propsToFwd.icon,
    className: "icon",
    alt: "icon"
  }) : null, /*#__PURE__*/React__default.createElement(Typography, {
    fontSize: customTextStyle === null || customTextStyle === void 0 ? void 0 : customTextStyle.fontSize,
    fontType: customTextStyle === null || customTextStyle === void 0 ? void 0 : customTextStyle.fontType,
    fontWeight: customTextStyle === null || customTextStyle === void 0 ? void 0 : customTextStyle.fontWeight,
    color: textColor
  }, children), propsToFwd.showArrow ? /*#__PURE__*/React__default.createElement(Pointer, {
    style: {
      marginLeft: '10px'
    },
    color: textColor
  }) : null), /*#__PURE__*/React__default.createElement("div", {
    className: "button-edge left"
  }), /*#__PURE__*/React__default.createElement("div", {
    className: "button-edge top"
  }));
};

export { FlatButton as default };
//# sourceMappingURL=FlatButton.js.map
