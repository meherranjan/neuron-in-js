{"version":3,"file":"checkPropTypes.js","sources":["../../../node_modules/prop-types/checkPropTypes.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar printWarning = function() {};\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n  var loggedTypeFailures = {};\n  var has = require('./lib/has');\n\n  printWarning = function(text) {\n    var message = 'Warning: ' + text;\n    if (typeof console !== 'undefined') {\n      console.error(message);\n    }\n    try {\n      // --- Welcome to debugging React ---\n      // This error was thrown as a convenience so that you can use this stack\n      // to find the callsite that caused this warning to fire.\n      throw new Error(message);\n    } catch (x) { /**/ }\n  };\n}\n\n/**\n * Assert that the values match with the type specs.\n * Error messages are memorized and will only be shown once.\n *\n * @param {object} typeSpecs Map of name to a ReactPropType\n * @param {object} values Runtime values that need to be type-checked\n * @param {string} location e.g. \"prop\", \"context\", \"child context\"\n * @param {string} componentName Name of the component for error messages.\n * @param {?Function} getStack Returns the component stack.\n * @private\n */\nfunction checkPropTypes(typeSpecs, values, location, componentName, getStack) {\n  if (process.env.NODE_ENV !== 'production') {\n    for (var typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        var error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            var err = Error(\n              (componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' +\n              'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' +\n              'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.'\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          printWarning(\n            (componentName || 'React class') + ': type specification of ' +\n            location + ' `' + typeSpecName + '` is invalid; the type checker ' +\n            'function must return `null` or an `Error` but returned a ' + typeof error + '. ' +\n            'You may have forgotten to pass an argument to the type checker ' +\n            'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n            'shape all require an argument).'\n          );\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n\n          var stack = getStack ? getStack() : '';\n\n          printWarning(\n            'Failed ' + location + ' type: ' + error.message + (stack != null ? stack : '')\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * Resets warning cache when testing.\n *\n * @private\n */\ncheckPropTypes.resetWarningCache = function() {\n  if (process.env.NODE_ENV !== 'production') {\n    loggedTypeFailures = {};\n  }\n}\n\nmodule.exports = checkPropTypes;\n"],"names":["printWarning","process","env","NODE_ENV","ReactPropTypesSecret","require$$0","loggedTypeFailures","has","require$$1","text","message","console","error","Error","x","checkPropTypes","typeSpecs","values","location","componentName","getStack","typeSpecName","err","name","ex","stack","resetWarningCache","checkPropTypes_1"],"mappings":"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"}