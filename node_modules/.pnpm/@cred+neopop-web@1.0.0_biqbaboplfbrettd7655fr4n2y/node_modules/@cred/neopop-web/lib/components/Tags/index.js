'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var index = require('../Typography/index.js');
require('../../primitives/index.js');
var styles = require('./styles.js');
var index$1 = require('../../utils/index.js');
var tags = require('../../primitives/tags.js');
var typography = require('../../primitives/typography.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var DEFAULT_TYPE = 'success';
var DEFAULT_MODE = 'dark';

var Tag = function Tag(_ref) {
  var children = _ref.children,
      colorConfig = _ref.colorConfig,
      textStyle = _ref.textStyle,
      icon = _ref.icon,
      _ref$noContainer = _ref.noContainer,
      noContainer = _ref$noContainer === void 0 ? false : _ref$noContainer,
      colorMode = _ref.colorMode,
      type = _ref.type;
  var defaultColorConfig = tags.getTagColor(type !== null && type !== void 0 ? type : DEFAULT_TYPE, colorMode !== null && colorMode !== void 0 ? colorMode : DEFAULT_MODE);
  var tagColorConfig = index$1.isEmpty(colorConfig) ? defaultColorConfig : colorConfig !== null && colorConfig !== void 0 ? colorConfig : defaultColorConfig;
  var background = tagColorConfig.background,
      color = tagColorConfig.color;
  var tags$1 = typography.typographyGuide.tags;
  if (noContainer) return /*#__PURE__*/React__default["default"].createElement(index["default"], _rollupPluginBabelHelpers["extends"]({
    as: "span"
  }, textStyle !== null && textStyle !== void 0 ? textStyle : tags$1.noContainerText, {
    color: color
  }), children);
  return /*#__PURE__*/React__default["default"].createElement(styles.TagContainer, {
    style: {
      background: background
    }
  }, icon ? /*#__PURE__*/React__default["default"].createElement(styles.TagIconContainer, null, /*#__PURE__*/React__default["default"].createElement(styles.TagIcon, {
    src: icon
  })) : null, /*#__PURE__*/React__default["default"].createElement(index["default"], _rollupPluginBabelHelpers["extends"]({}, textStyle !== null && textStyle !== void 0 ? textStyle : tags$1.containerText, {
    color: color
  }), children));
};

exports["default"] = Tag;
//# sourceMappingURL=index.js.map
