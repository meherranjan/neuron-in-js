'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var styled = require('styled-components');
var index = require('../../utils/index.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var styled__default = /*#__PURE__*/_interopDefaultLegacy(styled);

var TypographyWrapper = styled__default["default"].div.withConfig({
  displayName: "styles__TypographyWrapper",
  componentId: "sc-12skyof-0"
})(["", ";", ";", ";"], function (props) {
  return index.generateTextStyle(props.fontType, props.fontSize, props.fontWeight, props.color);
}, function (props) {
  return props.overflow && styled.css(["white-space:nowrap;overflow:hidden;text-overflow:", ";"], props.overflow);
}, function (props) {
  var _props$lineClamp;

  return props.overflow && props.lineClamp && styled.css(["display:-webkit-box;-webkit-line-clamp:", ";-webkit-box-orient:vertical;white-space:break-spaces;"], (_props$lineClamp = props.lineClamp) !== null && _props$lineClamp !== void 0 ? _props$lineClamp : 1);
});
var ParagraphWrapper = styled__default["default"].p.withConfig({
  displayName: "styles__ParagraphWrapper",
  componentId: "sc-12skyof-1"
})(["", ";", ";", ";"], function (props) {
  return index.generateTextStyle(props.fontType, props.fontSize, props.fontWeight, props.color);
}, function (props) {
  return props.overflow && styled.css(["white-space:nowrap;overflow:hidden;text-overflow:", ";"], props.overflow);
}, function (props) {
  var _props$lineClamp2;

  return props.overflow && props.lineClamp && styled.css(["display:-webkit-box;-webkit-line-clamp:", ";-webkit-box-orient:vertical;white-space:break-spaces;"], (_props$lineClamp2 = props.lineClamp) !== null && _props$lineClamp2 !== void 0 ? _props$lineClamp2 : 1);
});
var SpanWrapper = styled__default["default"].span.withConfig({
  displayName: "styles__SpanWrapper",
  componentId: "sc-12skyof-2"
})(["", ";", ";", ";"], function (props) {
  return index.generateTextStyle(props.fontType, props.fontSize, props.fontWeight, props.color);
}, function (props) {
  return props.overflow && styled.css(["white-space:nowrap;overflow:hidden;text-overflow:", ";"], props.overflow);
}, function (props) {
  var _props$lineClamp3;

  return props.overflow && props.lineClamp && styled.css(["display:-webkit-box;-webkit-line-clamp:", ";-webkit-box-orient:vertical;white-space:break-spaces;"], (_props$lineClamp3 = props.lineClamp) !== null && _props$lineClamp3 !== void 0 ? _props$lineClamp3 : 1);
});

exports.ParagraphWrapper = ParagraphWrapper;
exports.SpanWrapper = SpanWrapper;
exports.TypographyWrapper = TypographyWrapper;
//# sourceMappingURL=styles.js.map
