{"version":3,"file":"factoryWithThrowingShims.js","sources":["../../../node_modules/prop-types/factoryWithThrowingShims.js"],"sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n"],"names":["ReactPropTypesSecret","require$$0","emptyFunction","emptyFunctionWithReset","resetWarningCache","factoryWithThrowingShims","shim","props","propName","componentName","location","propFullName","secret","err","Error","name","isRequired","getShim","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes"],"mappings":";;;;;;;;;;;;;;;;;;;EASA,IAAIA,sBAAoB,GAAGC,8BAAA,EAA3B,CAAA;;EAEA,SAASC,aAAT,GAAyB,EAAE;;EAC3B,SAASC,sBAAT,GAAkC,EAAE;;EACpCA,sBAAsB,CAACC,iBAAvB,GAA2CF,aAA3C,CAAA;;AAEAG,EAAAA,wBAAc,GAAG,SAAW,wBAAA,GAAA;AAC1B,IAAA,SAASC,IAAT,CAAcC,KAAd,EAAqBC,QAArB,EAA+BC,aAA/B,EAA8CC,QAA9C,EAAwDC,YAAxD,EAAsEC,MAAtE,EAA8E;MAC5E,IAAIA,MAAM,KAAKZ,sBAAf,EAAqC;AACzC;AACM,QAAA,OAAA;AACD,OAAA;;MACD,IAAIa,GAAG,GAAG,IAAIC,KAAJ,CACR,sFACA,GAAA,+CADA,GAEA,gDAHQ,CAAV,CAAA;MAKAD,GAAG,CAACE,IAAJ,GAAW,qBAAX,CAAA;AACA,MAAA,MAAMF,GAAN,CAAA;AACD,KAAA;IACDP,IAAI,CAACU,UAAL,GAAkBV,IAAlB,CAAA;;AACA,IAAA,SAASW,OAAT,GAAmB;AACjB,MAAA,OAAOX,IAAP,CAAA;AACD,KAAA;AAEH;;AACE,IAAA,IAAIY,cAAc,GAAG;AACnBC,MAAAA,KAAK,EAAEb,IADY;AAEnBc,MAAAA,MAAM,EAAEd,IAFW;AAGnBe,MAAAA,IAAI,EAAEf,IAHa;AAInBgB,MAAAA,IAAI,EAAEhB,IAJa;AAKnBiB,MAAAA,MAAM,EAAEjB,IALW;AAMnBkB,MAAAA,MAAM,EAAElB,IANW;AAOnBmB,MAAAA,MAAM,EAAEnB,IAPW;AAQnBoB,MAAAA,MAAM,EAAEpB,IARW;AAUnBqB,MAAAA,GAAG,EAAErB,IAVc;AAWnBsB,MAAAA,OAAO,EAAEX,OAXU;AAYnBY,MAAAA,OAAO,EAAEvB,IAZU;AAanBwB,MAAAA,WAAW,EAAExB,IAbM;AAcnByB,MAAAA,UAAU,EAAEd,OAdO;AAenBe,MAAAA,IAAI,EAAE1B,IAfa;AAgBnB2B,MAAAA,QAAQ,EAAEhB,OAhBS;AAiBnBiB,MAAAA,KAAK,EAAEjB,OAjBY;AAkBnBkB,MAAAA,SAAS,EAAElB,OAlBQ;AAmBnBmB,MAAAA,KAAK,EAAEnB,OAnBY;AAoBnBoB,MAAAA,KAAK,EAAEpB,OApBY;AAsBnBqB,MAAAA,cAAc,EAAEnC,sBAtBG;AAuBnBC,MAAAA,iBAAiB,EAAEF,aAAAA;KAvBrB,CAAA;IA0BAgB,cAAc,CAACqB,SAAf,GAA2BrB,cAA3B,CAAA;AAEA,IAAA,OAAOA,cAAP,CAAA;GAhDF,CAAA;;;;;;;"}