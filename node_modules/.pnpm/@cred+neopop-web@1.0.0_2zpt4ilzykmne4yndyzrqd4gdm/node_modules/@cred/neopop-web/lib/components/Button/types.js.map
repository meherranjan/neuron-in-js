{"version":3,"file":"types.js","sources":["../../../src/components/Button/types.ts"],"sourcesContent":["import { FontNameSpaceInterface } from '../../types';\n\ninterface EdgeColors {\n    top: string;\n    bottom: string;\n    right: string;\n    left: string;\n}\n\nexport enum NeoPopElevationDirections {\n    br = 'bottom-right',\n    tr = 'top-right',\n    bl = 'bottom-left',\n    tl = 'top-left',\n    bc = 'bottom-center',\n    tc = 'top-center',\n    rc = 'right-center',\n    lc = 'left-center',\n}\n\nexport type ButtonVariants = 'primary' | 'secondary';\nexport type ButtonKinds = 'flat' | 'elevated' | 'link';\nexport type ButtonSizes = 'big' | 'medium' | 'small';\nexport type ButtonModes = 'dark' | 'light';\nexport interface ColorConfig {\n    borderColor?: string;\n    backgroundColor?: string;\n    edgeColors?: EdgeColors;\n    color?: string;\n}\n\nexport interface ButtonColorConfig extends ColorConfig {\n    disabledColors?: ColorConfig;\n}\nexport interface ButtonSpacingConfig {\n    padding?: string;\n    height?: string;\n    iconHeight?: string;\n}\n\nexport interface ButtonUIConfig {\n    colorConfig?: ButtonColorConfig;\n    textStyle?: FontNameSpaceInterface;\n    spacingConfig?: ButtonSpacingConfig;\n    elevationDirection?: NeoPopElevationDirections;\n    icon?: string;\n}\n\nexport interface LinkButtonProps {\n    color?: string;\n}\nexport interface ButtonProps extends ButtonUIConfig, React.HTMLAttributes<HTMLButtonElement> {\n    style?: React.CSSProperties;\n    children?: React.ReactNode;\n    variant?: ButtonVariants;\n    kind?: ButtonKinds;\n    size?: ButtonSizes;\n    colorMode?: ButtonModes;\n    disabled?: boolean;\n    showArrow?: boolean;\n    fullWidth?: boolean;\n    onClick?: () => void;\n}\n"],"names":["NeoPopElevationDirections"],"mappings":";;;;AASYA,2CAAZ;;WAAYA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;EAAAA;AAAAA,CAAAA,EAAAA,sCAAAA;;"}