import { objectWithoutProperties as _objectWithoutProperties, slicedToArray as _slicedToArray, extends as _extends } from '../../_virtual/_rollupPluginBabelHelpers.js';
import React__default, { useState, useEffect } from 'react';

var _excluded = ["isChecked", "onChange"];

var withCheckHOC = function withCheckHOC(OriginalComponent) {
  var NewComponent = function NewComponent(props) {
    var isChecked = props.isChecked,
        onChange = props.onChange,
        propsToFwd = _objectWithoutProperties(props, _excluded);

    var _useState = useState(isChecked !== null && isChecked !== void 0 ? isChecked : false),
        _useState2 = _slicedToArray(_useState, 2),
        isCbChecked = _useState2[0],
        setIsCbCheck = _useState2[1];

    useEffect(function () {
      if (typeof isChecked === 'boolean') {
        setIsCbCheck(isChecked);
      }
    }, [isChecked]);

    var handleChange = function handleChange(e) {
      if (onChange instanceof Function) {
        onChange(e);
      } else setIsCbCheck(e.target.checked);
    };

    return /*#__PURE__*/React__default.createElement(OriginalComponent, _extends({
      isChecked: isCbChecked,
      handleChange: handleChange
    }, propsToFwd));
  };

  return NewComponent;
};

export { withCheckHOC as default };
//# sourceMappingURL=withCheckHOC.js.map
