import { r as registerAction, e as dragAction } from '../../core/dist/actions-1416bf77.esm.js';
export { C as ConfigResolverMap, E as EngineMap, e as dragAction, r as registerAction } from '../../core/dist/actions-1416bf77.esm.js';
import React__default from 'react';
import { Controller } from '../../core/dist/use-gesture-core.esm.js';

function useRecognizers(handlers) {
  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var gestureKey = arguments.length > 2 ? arguments[2] : undefined;
  var nativeHandlers = arguments.length > 3 ? arguments[3] : undefined;
  var ctrl = React__default.useMemo(function () {
    return new Controller(handlers);
  }, []);
  ctrl.applyHandlers(handlers, nativeHandlers);
  ctrl.applyConfig(config, gestureKey);
  React__default.useEffect(ctrl.effect.bind(ctrl));
  React__default.useEffect(function () {
    return ctrl.clean.bind(ctrl);
  }, []);

  if (config.target === undefined) {
    return ctrl.bind.bind(ctrl);
  }

  return undefined;
}

function useDrag(handler, config) {
  registerAction(dragAction);
  return useRecognizers({
    drag: handler
  }, config || {}, 'drag');
}

export { useDrag };
//# sourceMappingURL=use-gesture-react.esm.js.map
