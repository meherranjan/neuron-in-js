'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _rollupPluginBabelHelpers = require('../../_virtual/_rollupPluginBabelHelpers.js');
var React = require('react');
var styles = require('./styles.js');
var index$1 = require('../Helpers/index.js');
var withCheckHOC = require('../Helpers/withCheckHOC.js');
require('../../primitives/index.js');
var index$2 = require('../../utils/index.js');
var colors = require('../../primitives/colors.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var _excluded = ["id", "label", "isChecked", "handleChange", "colorConfig", "colorMode"];

var Radio = function Radio(props) {
  var id = props.id,
      label = props.label,
      isChecked = props.isChecked,
      handleChange = props.handleChange,
      colorConfig = props.colorConfig,
      colorMode = props.colorMode,
      propsToFwd = _rollupPluginBabelHelpers.objectWithoutProperties(props, _excluded);

  var radioRef = React.useRef(null);
  var defaultColorConfig = colors.colorGuide[colorMode === 'light' ? 'lightComponents' : 'darkComponents'].radio;

  var RadioStyledButton = function RadioStyledButton() {
    return /*#__PURE__*/React__default["default"].createElement(styles.StyledRadio, {
      onClick: function onClick() {
        var _radioRef$current;

        return radioRef === null || radioRef === void 0 ? void 0 : (_radioRef$current = radioRef.current) === null || _radioRef$current === void 0 ? void 0 : _radioRef$current.click();
      },
      colorConfig: index$2.isEmpty(colorConfig) ? defaultColorConfig : colorConfig !== null && colorConfig !== void 0 ? colorConfig : defaultColorConfig
    }, /*#__PURE__*/React__default["default"].createElement("input", _rollupPluginBabelHelpers["extends"]({
      id: id,
      ref: radioRef,
      type: "radio",
      checked: isChecked,
      onChange: handleChange
    }, propsToFwd)), /*#__PURE__*/React__default["default"].createElement("span", {
      className: "checkmark"
    }, " "));
  };

  if (label && colorConfig !== null && colorConfig !== void 0 && colorConfig.containerConfig) {
    return /*#__PURE__*/React__default["default"].createElement(styles.RadioLabel, _rollupPluginBabelHelpers["extends"]({
      htmlFor: id
    }, colorConfig === null || colorConfig === void 0 ? void 0 : colorConfig.containerConfig, {
      className: isChecked ? 'selected' : ''
    }), /*#__PURE__*/React__default["default"].createElement(RadioStyledButton, null), /*#__PURE__*/React__default["default"].createElement(index$1.VerticalSpacer, {
      n: 3
    }), /*#__PURE__*/React__default["default"].createElement("div", {
      className: "label"
    }, label));
  }

  return /*#__PURE__*/React__default["default"].createElement(RadioStyledButton, null);
};

var index = withCheckHOC["default"](Radio);

exports["default"] = index;
//# sourceMappingURL=index.js.map
