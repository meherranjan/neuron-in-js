import { slicedToArray as _slicedToArray } from '../_virtual/_rollupPluginBabelHelpers.js';
import { useRef, useState, useLayoutEffect } from 'react';

function useClientHeight() {
  var ref = useRef();

  var _useState = useState(0),
      _useState2 = _slicedToArray(_useState, 2),
      clientHeight = _useState2[0],
      setClientHeight = _useState2[1];

  useLayoutEffect(function () {
    var _ref$current$clientHe, _ref$current, _ref$current3;

    setClientHeight((_ref$current$clientHe = (_ref$current = ref.current) === null || _ref$current === void 0 ? void 0 : _ref$current.clientHeight) !== null && _ref$current$clientHe !== void 0 ? _ref$current$clientHe : 0);

    function handleResize() {
      var _ref$current$clientHe2, _ref$current2;

      setClientHeight((_ref$current$clientHe2 = (_ref$current2 = ref.current) === null || _ref$current2 === void 0 ? void 0 : _ref$current2.clientHeight) !== null && _ref$current$clientHe2 !== void 0 ? _ref$current$clientHe2 : 0);
    }

    window.addEventListener('resize', handleResize);
    (_ref$current3 = ref.current) === null || _ref$current3 === void 0 ? void 0 : _ref$current3.addEventListener('resize', handleResize);
    return function () {
      var _ref$current4;

      window.removeEventListener('resize', handleResize);
      (_ref$current4 = ref.current) === null || _ref$current4 === void 0 ? void 0 : _ref$current4.addEventListener('resize', handleResize);
    };
  }, []);
  return [{
    ref: ref
  }, clientHeight];
}

export { useClientHeight as default };
//# sourceMappingURL=useClientHeight.js.map
