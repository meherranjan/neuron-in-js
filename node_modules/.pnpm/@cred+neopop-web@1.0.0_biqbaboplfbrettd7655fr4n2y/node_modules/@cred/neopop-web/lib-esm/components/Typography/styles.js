import styled, { css } from 'styled-components';
import { generateTextStyle } from '../../utils/index.js';

var TypographyWrapper = styled.div.withConfig({
  displayName: "styles__TypographyWrapper",
  componentId: "sc-12skyof-0"
})(["", ";", ";", ";"], function (props) {
  return generateTextStyle(props.fontType, props.fontSize, props.fontWeight, props.color);
}, function (props) {
  return props.overflow && css(["white-space:nowrap;overflow:hidden;text-overflow:", ";"], props.overflow);
}, function (props) {
  var _props$lineClamp;

  return props.overflow && props.lineClamp && css(["display:-webkit-box;-webkit-line-clamp:", ";-webkit-box-orient:vertical;white-space:break-spaces;"], (_props$lineClamp = props.lineClamp) !== null && _props$lineClamp !== void 0 ? _props$lineClamp : 1);
});
var ParagraphWrapper = styled.p.withConfig({
  displayName: "styles__ParagraphWrapper",
  componentId: "sc-12skyof-1"
})(["", ";", ";", ";"], function (props) {
  return generateTextStyle(props.fontType, props.fontSize, props.fontWeight, props.color);
}, function (props) {
  return props.overflow && css(["white-space:nowrap;overflow:hidden;text-overflow:", ";"], props.overflow);
}, function (props) {
  var _props$lineClamp2;

  return props.overflow && props.lineClamp && css(["display:-webkit-box;-webkit-line-clamp:", ";-webkit-box-orient:vertical;white-space:break-spaces;"], (_props$lineClamp2 = props.lineClamp) !== null && _props$lineClamp2 !== void 0 ? _props$lineClamp2 : 1);
});
var SpanWrapper = styled.span.withConfig({
  displayName: "styles__SpanWrapper",
  componentId: "sc-12skyof-2"
})(["", ";", ";", ";"], function (props) {
  return generateTextStyle(props.fontType, props.fontSize, props.fontWeight, props.color);
}, function (props) {
  return props.overflow && css(["white-space:nowrap;overflow:hidden;text-overflow:", ";"], props.overflow);
}, function (props) {
  var _props$lineClamp3;

  return props.overflow && props.lineClamp && css(["display:-webkit-box;-webkit-line-clamp:", ";-webkit-box-orient:vertical;white-space:break-spaces;"], (_props$lineClamp3 = props.lineClamp) !== null && _props$lineClamp3 !== void 0 ? _props$lineClamp3 : 1);
});

export { ParagraphWrapper, SpanWrapper, TypographyWrapper };
//# sourceMappingURL=styles.js.map
