import React from 'react';
import { UseBottomSheetMechanicsArgs, Prop } from '../types';
export declare const useBottomSheetMechanics: ({ open, handleClose, onBeforeClose, onCloseEnd, blocking, onOpenEnd, }: UseBottomSheetMechanicsArgs) => {
    requestCloseBottomSheet: () => void;
    opacity: import("@react-spring/web").SpringValue<number>;
    y: import("@react-spring/web").SpringValue<string>;
    bind: (...args: any[]) => import("@use-gesture/react").ReactDOMAttributes;
    cardRef: {
        ref: React.MutableRefObject<HTMLDivElement>;
    };
    scaleY: import("@react-spring/web").SpringValue<number>;
};
declare const BottomSheetControlled: ({ children, node, handleClose, blocking, onCloseEnd, onBeforeClose, open, maxHeight, sheetStyle, sheetPlunkColor, overlayColor, ...props }: Prop) => JSX.Element;
export declare const BottomSheetControlledCustom: ({ children, node, handleClose, blocking, onCloseEnd, onBeforeClose, open, maxHeight, sheetStyle, sheetPlunkColor, overlayColor, shouldShowNotch, shouldShowOverlay, ...props }: Prop) => JSX.Element;
export default BottomSheetControlled;
//# sourceMappingURL=BottomSheetControlled.d.ts.map