import { ButtonModes, ButtonKinds, ButtonVariants, ButtonSizes } from '../types';
export declare const getButtonColors: (mode: ButtonModes, variant: ButtonVariants, kind: ButtonKinds) => {
    mode: ButtonModes;
    edgeColors: {
        top: string;
        left: string;
        bottom: string;
        right: string;
    } | {
        top: string;
        left: string;
        bottom: string;
        right: string;
    };
    backgroundColor: string;
    color: string;
    disabledColors: {
        backgroundColor: string;
        color: string;
        edgeColors: {
            top: string;
            left: string;
            right: string;
            bottom: string;
        };
    };
} | {
    mode: ButtonModes;
    edgeColors: {
        top: string;
        left: string;
        bottom: string;
        right: string;
    } | {
        top: string;
        left: string;
        bottom: string;
        right: string;
    };
    backgroundColor: string;
    color: string;
    borderColor: string;
    disabledColors: {
        backgroundColor: string;
        color: string;
        borderColor: string;
        edgeColors: {
            top: string;
            left: string;
            right: string;
            bottom: string;
        };
    };
};
export declare const getSpacingConfig: (size: ButtonSizes) => {
    height: string;
    padding: string;
    iconHeight: string;
};
export declare const getTextStyle: (size: ButtonSizes) => import("../types").FontNameSpaceInterface;
/** ****************************************************************************************** */
export declare const getButtonConfig: (name: string) => {
    colorConfig: {
        mode: ButtonModes;
        edgeColors: {
            top: string;
            left: string;
            bottom: string;
            right: string;
        } | {
            top: string;
            left: string;
            bottom: string;
            right: string;
        };
        backgroundColor: string;
        color: string;
        disabledColors: {
            backgroundColor: string;
            color: string;
            edgeColors: {
                top: string;
                left: string;
                right: string;
                bottom: string;
            };
        };
    } | {
        mode: ButtonModes;
        edgeColors: {
            top: string;
            left: string;
            bottom: string;
            right: string;
        } | {
            top: string;
            left: string;
            bottom: string;
            right: string;
        };
        backgroundColor: string;
        color: string;
        borderColor: string;
        disabledColors: {
            backgroundColor: string;
            color: string;
            borderColor: string;
            edgeColors: {
                top: string;
                left: string;
                right: string;
                bottom: string;
            };
        };
    };
    spacingConfig: {
        height: string;
        padding: string;
        iconHeight: string;
    };
    colorMode: string;
    size: string;
    kind: string;
    variant: string;
    showArrow: boolean;
};
//# sourceMappingURL=buttons.d.ts.map