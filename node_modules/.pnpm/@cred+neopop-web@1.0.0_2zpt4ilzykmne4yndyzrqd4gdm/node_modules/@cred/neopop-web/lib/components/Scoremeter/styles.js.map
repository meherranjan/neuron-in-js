{"version":3,"file":"styles.js","sources":["../../../src/components/Scoremeter/styles.ts"],"sourcesContent":["import styled, { css } from 'styled-components';\nimport { ScoremeterColorConfig, ScoremeterTypes } from './types';\n\nexport const MeterContainer = styled.div`\n    position: relative;\n    height: 185px;\n`;\n\ninterface StyledScoremeter {\n    colorConfig: ScoremeterColorConfig;\n    type: ScoremeterTypes;\n    showIndicators?: boolean;\n}\n\nexport const MeterWrapper = styled.div<StyledScoremeter>`\n    position: relative;\n    width: 160px;\n    height: 160px;\n    border-radius: 50%;\n    background: ${({ colorConfig }) => colorConfig?.meterStrokeBackground ?? 'transparent'};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: ${({ colorConfig }) => `1px solid ${colorConfig?.meterBorderColor}`};\n\n    &.absoulte-center {\n        left: 50%;\n        top: 50%;\n        -webkit-transform: translate(-50%, -50%);\n        transform: translate(-50%, -50%);\n    }\n\n    .dot {\n        width: 6px;\n        height: 6px;\n        position: absolute;\n        background: ${({ colorConfig, type }) =>\n            colorConfig?.dotColor\n                ? colorConfig.dotColor\n                : colorConfig?.meterStrokeColor[type ?? 'excellent']};\n        border-radius: 50%;\n        z-index: 9;\n        transform: rotateZ(45deg) translateY(80px);\n        transition: transform 0.2s ease;\n    }\n\n    .meter {\n        transform: rotate(135deg);\n        background: ${({ colorConfig }) => colorConfig?.meterStrokeBackground};\n        border-radius: 50%;\n    }\n`;\n\nexport const ScoreContainer = styled.div<StyledScoremeter>`\n    width: 115px;\n    height: 115px;\n    border-radius: 50%;\n    background: ${({ colorConfig }) =>\n        colorConfig?.scoreContainerBorder ? colorConfig?.scoreContainerBorder : 'transparent'};\n    position: absolute;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    left: 50%;\n    top: 50%;\n    -webkit-transform: translate(-50%, -50%);\n    transform: translate(-50%, -50%);\n    .score {\n        all: inherit;\n        background: ${({ colorConfig }) => colorConfig?.scoreContainerBackground};\n        color: ${({ colorConfig }) => colorConfig?.scoreColor};\n        padding-top: ${({ showIndicators }) => (showIndicators ? '6%' : '0')};\n        width: 95px;\n        height: 95px;\n        letter-spacing: 1px;\n        overflow: hidden;\n    }\n`;\n\nexport const MeterSVG = styled.svg`\n    display: block;\n    & .path {\n        transition: stroke-dasharray 100ms ease;\n    }\n    & .path1 {\n        transition: stroke-dasharray 100ms ease;\n    }\n`;\n\nexport const Legend = styled.div`\n    position: absolute;\n    bottom: 0;\n    color: #4b4f52;\n    ${(props: { right?: boolean }) =>\n        props.right\n            ? css`\n                  right: 0;\n              `\n            : css`\n                  left: 0;\n              `};\n    .dot {\n        text-align: center;\n        color: #434547;\n    }\n`;\n"],"names":["MeterContainer","styled","div","MeterWrapper","colorConfig","meterStrokeBackground","meterBorderColor","type","dotColor","meterStrokeColor","ScoreContainer","scoreContainerBorder","scoreContainerBackground","scoreColor","showIndicators","MeterSVG","svg","Legend","props","right","css"],"mappings":"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"}